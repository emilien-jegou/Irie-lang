# sponsor
# expr2Core
  * are there ever inline polytypes ? (force use of typevar?)
  * imports
  * array prims + patterns + nested patterns
  * register data subtypes (for recursive refs)
  * polymorphic fns (boxed | unboxed)
  * debruijn indexes for type-level computations?
  * GADT's (apparently non-trivial interactions with subtyping because equality constraints eg. Sum a a => a == a)
  * error reporting

# Typeclass
  * default typeclass signatures/decls
  * check instances <= class

# parser
  * lambda case
  * move all type parse logic to the term parser
  * linefolds
  * source locations

# Prelude
  * fold-build ~ lazy
  * effects
  * distributed computing

# Low priority
  * precompiled modules (sv them where?)
  * generate function wrappers for remaining primitives (stgtollvm.wrapPrim:275)
  * View patterns
  * a , b : t -- syntax

# Maybe
  * rec
  * parse GADT style
  * GuardedRhs
  * ContPrim may be unecessary
  * optimize convFixities
  * use Vector.Bundle in toCore ? (have to register names early though)
