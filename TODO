## Top Priority
  * User declared type, more complex type annotations
  * Bug with unlines (probably concatenation of mu types since ok if you seperate the concat)

## Top
  * repl typecase to print JIT results
  * language server
  * optimize cached modules
  * module import loops
  * Don't repeat not-in-scope errors
## Parse
  * Use [n..] numbered args from Parser in a safer way
  * Pattern guards
  * List comp
  * sh syntax `ls -lr` => `ls { l=True , r=True }`
## Types
  * Char newtype + encoding subtyping vs bitwidths
  * propagate poisonexpr from matchAlts
  * check let|rec + mark Binds as let|rec
  * handle field name collisions (THFieldCollision)
  * Warn nonsense type join
  * lone mfWords that aren't ambig-binds should error (also things like f = 3 <)
  * Dependent normalisation & Staging
  * typevars with bounds (a->b) & (c->d) need to be flattened and merged for co-occurence analysis (a&c -> b&d)
  * simplify type; imports.basic.twice f x = f (f x)
  * Careful mergeing mu types; µx. may contain other µx.!
  * need to generalise (place the forall.) in polymorphic subexpressions correctly
## Simplifier
  * constructor specialisation
  * case-of-case
  * static argument transformation
## Codegen
  * do asmIdx resolution here
  * promote single field records to field value (esp. if avoids pointer indirection)
