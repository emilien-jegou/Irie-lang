type T = ((#!Int 32) #!, (#!Int 32))
at : T -> Int -> Int -> Int = #!gep
--uncurry : (Int->Int->Int) -> T -> Int
--uncurry f tuple = f (at tuple 0 0) (at tuple 0 1)
uncurry : (Int->Int->Int) -> T -> Int
uncurry f (a,b) = f a b

plus a b = a + b

mkTuple : Int -> Int -> T
mkTuple = #!MkTuple

t = mkTuple 2 3
main = printf "%d\n" (uncurry plus t)
